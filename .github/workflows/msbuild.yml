name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        path: csgo-manager-core

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Checkout Third-Party
      uses: actions/checkout@v3.3.0
      with:
        repository: VoidPromise/third-party
        ref: master
        token: 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
        path: third-party
        
    - name: Checkout Name Generator
      uses: actions/checkout@v3.3.0
      with:
        repository: VoidPromise/name-generator
        ref: main
        token: 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
        path: name-generator
        
    - name: Checkout Nickname Generator
      uses: actions/checkout@v3.3.0
      with:
        repository: VoidPromise/nickname-generator
        ref: main
        token: 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
        path: nickname-generator

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}csgo-manager-core
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
